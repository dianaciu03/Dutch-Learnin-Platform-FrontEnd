name: Frontend CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Docker Environment Variable
        run: echo "DOCKER_ENV=true" >> $GITHUB_ENV

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build Application
        run: npm run build

  deploy:
    name: Deploy with Docker Compose
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Deploy Services with Docker Compose
        env:
          DOCKER_ENV: true
          REACT_APP_AZURE_CLIENT_ID: ${{ secrets.REACT_APP_AZURE_CLIENT_ID }}
          DOCKER_COSMOSDB_CONNECTION_STRING: ${{ secrets.DOCKER_COSMOSDB_CONNECTION_STRING }}
          DOCKER_COSMOSDB_DATABASE_NAME: ${{ secrets.DOCKER_COSMOSDB_DATABASE_NAME }}
          DOCKER_COSMOSDB_CONTAINER_NAME: ${{ secrets.DOCKER_COSMOSDB_CONTAINER_NAME }}
          DOCKER_RABBITMQ_HOST: ${{ secrets.DOCKER_RABBITMQ_HOST }}
          DOCKER_RABBITMQ_USER: ${{ secrets.DOCKER_RABBITMQ_USER }}
          DOCKER_RABBITMQ_PASSWORD: ${{ secrets.DOCKER_RABBITMQ_PASSWORD }}
        run: |
          docker-compose -f docker-compose.yml up -d --build

  cypress:
    name: Run Cypress Tests
    runs-on: ubuntu-latest
    needs: deploy
  
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
  
      - name: Install Cypress Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2
  
      - name: Wait for the app to be ready
        run: |
          echo "Waiting for the frontend to start..."
          n=0
          until curl -sSf http://localhost:3001 > /dev/null || [ $n -ge 10 ]; do
            echo "Waiting for app... ($n)"
            n=$((n+1))
            sleep 5
          done
  
      - name: Install Node (for Cypress)
        uses: actions/setup-node@v4
        with:
          node-version: '18'
  
      - name: Install Node Dependencies
        run: npm ci
  
      - name: Run Cypress Tests
        run: npm run cypress:run
        env:
          CYPRESS_baseUrl: http://localhost:3001

  push-image:
    name: Push Frontend Image to DockerHub
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and Tag Frontend Docker Image
        run: |
          docker build -t slim-studie-frontend:latest .
          docker tag slim-studie-frontend:latest ${{ secrets.DOCKER_HUB_USERNAME }}/slim-studie-frontend:latest

      - name: Push Frontend Docker Image
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/slim-studie-frontend:latest
